<Window x:Class="SDBEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SDBEditor"
        mc:Ignorable="d"
        Title="SDB Editor" Height="900" Width="1600"
        Background="#1E1E1E" WindowStartupLocation="CenterScreen"
        AllowDrop="True"
        DragEnter="Window_DragEnter"
        DragOver="Window_DragOver"
        Drop="Window_Drop"
        RenderOptions.BitmapScalingMode="HighQuality"
        RenderOptions.EdgeMode="Aliased"
        RenderOptions.ClearTypeHint="Enabled"
        UseLayoutRounding="True"
        TextOptions.TextFormattingMode="Display"
        TextOptions.TextRenderingMode="ClearType">

    <Window.Resources>
        <!-- ScrollBar Thumb -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="ThumbBorder"
                                Background="#666666"
                                CornerRadius="6"
                                Margin="2">
                            <Border.Effect>
                                <DropShadowEffect Color="#00FF50" BlurRadius="8" ShadowDepth="0" Opacity="0"/>
                            </Border.Effect>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ThumbBorder" Property="Background" Value="#00AA44"/>
                                <Setter TargetName="ThumbBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#00FF50" BlurRadius="10" ShadowDepth="0" Opacity="0.6"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="ThumbBorder" Property="Background" Value="#00FF50"/>
                                <Setter TargetName="ThumbBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#00FF50" BlurRadius="15" ShadowDepth="0" Opacity="0.8"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar RepeatButton (for track) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar Arrow RepeatButton -->
        <Style x:Key="ScrollBarArrowButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="#3D3D3D" CornerRadius="2" Margin="1">
                            <Path x:Name="Arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="#999999"
                                  Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Arrow" Property="Fill" Value="#00FF50"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Arrow" Property="Fill" Value="#00AA44"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Vertical ScrollBar -->
        <Style x:Key="GreenVerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Width" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Border Background="#2D2D30" CornerRadius="0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="14"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="14"/>
                                </Grid.RowDefinitions>

                                <!-- Up Arrow -->
                                <RepeatButton Grid.Row="0"
                                              Style="{StaticResource ScrollBarArrowButton}"
                                              Command="ScrollBar.LineUpCommand"
                                              Content="M 0 4 L 4 0 L 8 4"/>

                                <!-- Track -->
                                <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>

                                <!-- Down Arrow -->
                                <RepeatButton Grid.Row="2"
                                              Style="{StaticResource ScrollBarArrowButton}"
                                              Command="ScrollBar.LineDownCommand"
                                              Content="M 0 0 L 4 4 L 8 0"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Horizontal ScrollBar -->
        <Style x:Key="GreenHorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Border Background="#2D2D30" CornerRadius="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="14"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="14"/>
                                </Grid.ColumnDefinitions>

                                <!-- Left Arrow -->
                                <RepeatButton Grid.Column="0"
                                              Style="{StaticResource ScrollBarArrowButton}"
                                              Command="ScrollBar.LineLeftCommand"
                                              Content="M 4 0 L 0 4 L 4 8"/>

                                <!-- Track -->
                                <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="false">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>

                                <!-- Right Arrow -->
                                <RepeatButton Grid.Column="2"
                                              Style="{StaticResource ScrollBarArrowButton}"
                                              Command="ScrollBar.LineRightCommand"
                                              Content="M 0 0 L 4 4 L 0 8"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Main ScrollBar Style -->
        <Style x:Key="GreenScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="14"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Border Background="#2D2D30" CornerRadius="0">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="14"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="14"/>
                                        </Grid.RowDefinitions>

                                        <!-- Up Arrow -->
                                        <RepeatButton Grid.Row="0"
                                                      Style="{StaticResource ScrollBarArrowButton}"
                                                      Command="ScrollBar.LineUpCommand"
                                                      Content="M 0 4 L 4 0 L 8 4"/>

                                        <!-- Track -->
                                        <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                            </Track.Thumb>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand"/>
                                            </Track.IncreaseRepeatButton>
                                        </Track>

                                        <!-- Down Arrow -->
                                        <RepeatButton Grid.Row="2"
                                                      Style="{StaticResource ScrollBarArrowButton}"
                                                      Command="ScrollBar.LineDownCommand"
                                                      Content="M 0 0 L 4 4 L 8 0"/>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Height" Value="14"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Border Background="#2D2D30" CornerRadius="0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="14"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="14"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- Left Arrow -->
                                        <RepeatButton Grid.Column="0"
                                                      Style="{StaticResource ScrollBarArrowButton}"
                                                      Command="ScrollBar.LineLeftCommand"
                                                      Content="M 4 0 L 0 4 L 4 8"/>

                                        <!-- Track -->
                                        <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="false">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                                            </Track.DecreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                            </Track.Thumb>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                                            </Track.IncreaseRepeatButton>
                                        </Track>

                                        <!-- Right Arrow -->
                                        <RepeatButton Grid.Column="2"
                                                      Style="{StaticResource ScrollBarArrowButton}"
                                                      Command="ScrollBar.LineRightCommand"
                                                      Content="M 0 0 L 4 4 L 0 8"/>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Apply to all ScrollBars -->
        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource GreenScrollBarStyle}"/>

        <!-- Style for ScrollViewer that preserves performance -->
        <Style x:Key="GreenScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Background" Value="#3D3D3D"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Grid.Column="0"
                                                    Grid.Row="0"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"/>

                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       Grid.Row="0"
                                       Orientation="Vertical"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Style="{StaticResource GreenScrollBarStyle}"/>

                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Grid.Column="0"
                                       Grid.Row="1"
                                       Orientation="Horizontal"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Style="{StaticResource GreenScrollBarStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for navigation buttons -->
        <Style x:Key="NavButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#333333"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#444444"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for action buttons -->
        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="15,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#3E3E42"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#00FF50"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- New Style for circular sharelist buttons -->
        <Style x:Key="CircularSharelistButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#3D3D40"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="48"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Margin" Value="5,8,5,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}" 
                                     Width="{TemplateBinding Width}"
                                     Height="{TemplateBinding Height}">
                                <Ellipse.Effect>
                                    <DropShadowEffect BlurRadius="4" ShadowDepth="2" Opacity="0.3" Color="Black"/>
                                </Ellipse.Effect>
                            </Ellipse>
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#00AA44"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#00FF50"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#2D2D30"/>
                                <Setter Property="Foreground" Value="#666666"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for DataGrid -->
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="RowBackground" Value="#252526"/>
            <Setter Property="AlternatingRowBackground" Value="#2D2D30"/>
            <Setter Property="RowHeight" Value="30"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#3F3F46"/>
            <Setter Property="VerticalGridLinesBrush" Value="#3F3F46"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="ColumnHeaderHeight" Value="32"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
            <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Page"/>
            <Setter Property="VirtualizingPanel.CacheLength" Value="3"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="EnableColumnVirtualization" Value="True"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
            <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
            <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>

            <!-- Override the DataGrid template to ensure our ScrollBar style is used -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" 
                                          Focusable="false"
                                          Background="Transparent">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <Button Focusable="false"
                                                    Command="{x:Static DataGrid.SelectAllCommand}"
                                                    Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                    Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                            Grid.Column="1"
                                                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                    Grid.ColumnSpan="2"
                                                                    Grid.Row="1"/>

                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                       Grid.Column="2"
                                                       Grid.Row="1"
                                                       Orientation="Vertical"
                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Style="{StaticResource GreenScrollBarStyle}"/>

                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>

                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                           Grid.Column="1"
                                                           Orientation="Horizontal"
                                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                                           Maximum="{TemplateBinding ScrollableWidth}"
                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Style="{StaticResource GreenScrollBarStyle}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for DataGrid Headers -->
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#252526"/>
            <Setter Property="Foreground" Value="#E6E6E6"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- Style for DataGrid Cells -->
        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="Foreground" Value="#E6E6E6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#2D3D30"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#00FF50"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Updated DataGridRow Style with green theme -->
        <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#3E3E42"/>
                    <!-- Row hover effect with green glow -->
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#00FF50" BlurRadius="10" ShadowDepth="0" Opacity="0.3"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#2D3D30"/>
                    <!-- Darker green tint for selection -->
                    <Setter Property="BorderBrush" Value="#00FF50"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for TextBox with improved text display -->
        <Style x:Key="SearchBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#333337"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Padding" Value="10,5,10,5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          SnapsToDevicePixels="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for ComboBox -->
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="#333337"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton 
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border 
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="4">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="20"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter
                                                    Margin="8,5,0,5"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    Grid.Column="0"/>
                                                <Path
                                                    Grid.Column="1"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Data="M0,0 L4,4 L8,0 Z"
                                                    Fill="{TemplateBinding Foreground}"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter
                                Margin="8,5,0,5"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"/>
                            <Popup 
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                Placement="Bottom"
                                Width="{TemplateBinding ActualWidth}"
                                StaysOpen="False">
                                <Border
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="#555555"
                                    BorderThickness="1"
                                    CornerRadius="0,0,4,4">
                                    <ScrollViewer MaxHeight="200">
                                        <StackPanel 
                                            IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Padding" Value="8,5"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}">
                                    <ContentPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#3E3E42"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#2D3D30"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>

        <!-- COMPLETELY REBUILT CONTEXT MENU STYLE -->
        <Style x:Key="GreenContextMenuStyle" TargetType="{x:Type ContextMenu}">
            <Setter Property="Background" Value="#2D2D30"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="8" ShadowDepth="3" Opacity="0.5" Color="Black"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel IsItemsHost="True" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- COMPLETELY CUSTOM MENU ITEM STYLE WITHOUT WHITE BACKGROUND -->
        <Style x:Key="GreenMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="MainBorder" 
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                CornerRadius="3"
                                Padding="2">
                            <DockPanel LastChildFill="True" Background="Transparent">
                                <!-- Icon with glow effect -->
                                <DockPanel.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                </DockPanel.Resources>

                                <!-- Icon container without white background -->
                                <ContentPresenter x:Name="Icon" 
                                                ContentSource="Icon" 
                                                Width="26" 
                                                Height="20"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                DockPanel.Dock="Left">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect Color="#00FF50" BlurRadius="15" ShadowDepth="0" Opacity="0.8"/>
                                    </ContentPresenter.Effect>
                                </ContentPresenter>

                                <!-- Header text -->
                                <ContentPresenter x:Name="HeaderHost" 
                                                ContentSource="Header"
                                                RecognizesAccessKey="True"
                                                Margin="6,0,6,0"
                                                VerticalAlignment="Center"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="#3E3E42"/>
                                <Setter Property="Foreground" Value="#00FF50"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#999999"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GreenMenuSeparatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="5,3"/>
            <Setter Property="Background" Value="#3F3F46"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderThickness="0" 
                                Background="{TemplateBinding Background}" 
                                Height="{TemplateBinding Height}" 
                                Margin="{TemplateBinding Margin}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- END OF CUSTOM MENU STYLES -->

        <!-- Storyboards for Status Bar animations -->
        <Storyboard x:Key="StatusBarFadeIn">
            <DoubleAnimation 
                Storyboard.TargetProperty="Opacity"
                From="0.0" To="1.0" Duration="0:0:0.3"/>
        </Storyboard>

        <Storyboard x:Key="StatusBarFadeOut">
            <DoubleAnimation 
                Storyboard.TargetProperty="Opacity"
                From="1.0" To="0.0" Duration="0:0:2"
                BeginTime="0:0:3"/>
        </Storyboard>

        <!-- DropShadow effect for overlay panels -->
        <DropShadowEffect x:Key="DropShadowEffect" 
                         BlurRadius="15" 
                         ShadowDepth="2" 
                         Direction="270" 
                         Color="Black" 
                         Opacity="0.6" />

        <!-- Converters for sharelist update feature -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:BoolToThicknessConverter x:Key="BoolToThicknessConverter"/>
    </Window.Resources>

    <!-- Main container grid with everything inside it (only ONE direct child of Window) -->
    <Grid>
        <!-- Main content grid with columns -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="220"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <!-- New column for sharelist -->
            </Grid.ColumnDefinitions>

            <!-- Left Sidebar -->
            <Grid Grid.Column="0" Background="#252526">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- SDB Logo Image -->
                <Image x:Name="SdbLogo" 
                       Width="200" 
                       Height="150" 
                       Margin="10,20,10,5"
                       VerticalAlignment="Center" 
                       HorizontalAlignment="Center" 
                       Grid.Row="0"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       Stretch="Uniform">
                    <Image.Effect>
                        <DropShadowEffect BlurRadius="8" ShadowDepth="4" Opacity="0.6" Color="#000000"/>
                    </Image.Effect>
                </Image>

                <!-- Navigation Menu -->
                <ScrollViewer Grid.Row="1" 
                              Style="{StaticResource GreenScrollViewer}" 
                              VerticalScrollBarVisibility="Auto" 
                              Background="Transparent">
                    <StackPanel Margin="15,20" Background="Transparent">
                        <Button Style="{StaticResource NavButtonStyle}" Click="OpenFile_Click" Background="Transparent" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <TextBlock Text="&#xE8E5;" FontFamily="Segoe MDL2 Assets" Margin="0,0,10,0"/>
                                <TextBlock Text="Open SDB"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource NavButtonStyle}" Click="SaveFile_Click" Background="Transparent" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <TextBlock Text="&#xE74E;" FontFamily="Segoe MDL2 Assets" Margin="0,0,10,0"/>
                                <TextBlock Text="Save SDB"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource NavButtonStyle}" Click="AutoSeekSdb_Click" Background="Transparent" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <TextBlock Text="&#xE895;" FontFamily="Segoe MDL2 Assets" Margin="0,0,10,0"/>
                                <TextBlock Text="Auto Seek SDB"/>
                            </StackPanel>
                        </Button>

                        <Separator Margin="0,10" Background="#00FF50"/>

                        <Button Style="{StaticResource NavButtonStyle}" Click="AddString_Click" Background="Transparent" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <TextBlock Text="&#xE109;" FontFamily="Segoe MDL2 Assets" Margin="0,0,10,0"/>
                                <TextBlock Text="Add New String"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource NavButtonStyle}" Click="AddMultiple_Click" Background="Transparent" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <TextBlock Text="&#xE8EF;" FontFamily="Segoe MDL2 Assets" Margin="0,0,10,0"/>
                                <TextBlock Text="Add Multiple Strings"/>
                            </StackPanel>
                        </Button>

                        <Separator Margin="0,10" Background="#00FF50"/>

                        <Button Style="{StaticResource NavButtonStyle}" Click="MergeSdbs_Click" Background="Transparent" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <TextBlock Text="&#xE8D2;" FontFamily="Segoe MDL2 Assets" Margin="0,0,10,0"/>
                                <TextBlock Text="Merge SDBs"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource NavButtonStyle}" Click="ChangeLanguage_Click" Background="Transparent" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <TextBlock Text="&#xE8C3;" FontFamily="Segoe MDL2 Assets" Margin="0,0,10,0"/>
                                <TextBlock Text="Change Language"/>
                            </StackPanel>
                        </Button>

                        <Separator Margin="0,10" Background="#00FF50"/>

                        <Button Style="{StaticResource NavButtonStyle}" Click="ImportStrings_Click" Background="Transparent" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <TextBlock Text="&#xE8DB;" FontFamily="Segoe MDL2 Assets" Margin="0,0,10,0"/>
                                <TextBlock Text="Import Strings"/>
                            </StackPanel>
                        </Button>

                        <Button Style="{StaticResource NavButtonStyle}" Click="ExportStrings_Click" Background="Transparent" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <TextBlock Text="&#xE8DE;" FontFamily="Segoe MDL2 Assets" Margin="0,0,10,0"/>
                                <TextBlock Text="Export Strings"/>
                            </StackPanel>
                        </Button>

                        <Separator Margin="0,10" Background="#00FF50"/>

                        <Button Style="{StaticResource NavButtonStyle}" Click="Rollback_Click" Background="Transparent" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal" Background="Transparent">
                                <TextBlock Text="&#xE7A7;" FontFamily="Segoe MDL2 Assets" Margin="0,0,10,0"/>
                                <TextBlock Text="Rollback"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </ScrollViewer>

                <!-- Version Info -->
                <TextBlock Text="Version 2.5" 
                           Foreground="#999999" 
                           HorizontalAlignment="Center" 
                           Margin="0,23,0,6"
                           Grid.Row="2"/>
            </Grid>

            <!-- Main Content -->
            <Grid Grid.Column="1" Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Game Info Header with WWE 2K Logo -->
                <Border Grid.Row="0" 
                        Background="#2D2D30" 
                        Padding="20,15" 
                        BorderThickness="0,0,0,1" 
                        BorderBrush="#00FF50">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Game info with WWE 2K logo - Initially hidden -->
                        <StackPanel x:Name="GameInfoPanel" 
                                   Orientation="Horizontal" 
                                   VerticalAlignment="Center"
                                   Grid.Column="0"
                                   Visibility="Collapsed">
                            <TextBlock Text="Game: " 
                                      Foreground="White" 
                                      FontSize="14" 
                                      VerticalAlignment="Center"/>

                            <!-- WWE 2K Logo with Shadow -->
                            <Image x:Name="WWE2KLogo"
                                   Height="30"
                                   Margin="0,0,-1,0"
                                   VerticalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="HighQuality">
                                <Image.Effect>
                                    <DropShadowEffect BlurRadius="5" ShadowDepth="3" Opacity="0.6" Color="Black"/>
                                </Image.Effect>
                            </Image>

                            <!-- Game Version Number -->
                            <TextBlock x:Name="GameVersionText" 
                                      Text="" 
                                      Foreground="White" 
                                      FontSize="12" 
                                      Margin="2,0,3,0"
                                      VerticalAlignment="Center">
                                <!-- Apply a small vertical adjustment to match logo baseline -->
                                <TextBlock.RenderTransform>
                                    <TranslateTransform Y="1"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>

                            <!-- Language and Mangled Info -->
                            <TextBlock x:Name="GameExtraInfoText" 
                                      Text="" 
                                      Foreground="White" 
                                      FontSize="12" 
                                      VerticalAlignment="Center"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Grid.Column="1">
                            <Button Style="{StaticResource ActionButtonStyle}" 
                                    Click="RefreshDisplay_Click"
                                    ToolTip="Refresh Display">
                                <TextBlock Text="&#xE72C;" FontFamily="Segoe MDL2 Assets"/>
                            </Button>

                            <!-- Sharelist toggle button -->
                            <Button Style="{StaticResource ActionButtonStyle}" 
                                    Click="ToggleSharelist_Click"
                                    ToolTip="Toggle Sharelist Panel"
                                    Margin="5,0,0,0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="&#xE8F1;" FontFamily="Segoe MDL2 Assets"/>
                                    <Border x:Name="SharelistButtonBadge" 
                                           Background="#00FF50" 
                                           CornerRadius="8"
                                           Padding="5,2"
                                           Margin="5,0,0,0"
                                           Visibility="Collapsed">
                                        <TextBlock x:Name="SharelistButtonBadgeText"
                                           Text="0" 
                                           Foreground="#1E1E1E"
                                           FontSize="10"
                                           FontWeight="Bold"/>
                                    </Border>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>

                <!-- Search Bar with improved text handling -->
                <Grid Grid.Row="1" Background="#333337" Margin="5,10,20,10">
                    <Grid.Effect>
                        <DropShadowEffect BlurRadius="8" ShadowDepth="3" Opacity="0.5" Color="Black"/>
                    </Grid.Effect>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Search:" 
                               Foreground="White" 
                               VerticalAlignment="Center"
                               Margin="12,-1,4,0"
                               Grid.Column="0"/>

                    <TextBox x:Name="SearchBox" 
                             Style="{StaticResource SearchBoxStyle}"
                             TextChanged="SearchBox_TextChanged"
                             VerticalContentAlignment="Center"
                             Padding="10,3,10,5"
                             MinHeight="32"
                             Grid.Column="1"/>

                    <TextBlock Text="Search by:"
                               Foreground="White" 
                               VerticalAlignment="Center"
                               Margin="25,0,10,0"
                               Grid.Column="2"/>

                    <ComboBox x:Name="SearchTypeComboBox" 
                              Style="{StaticResource ComboBoxStyle}"
                              SelectionChanged="SearchTypeComboBox_SelectionChanged"
                              Grid.Column="3">
                        <ComboBoxItem Content="Text" IsSelected="True"/>
                        <ComboBoxItem Content="String Hash ID"/>
                    </ComboBox>
                </Grid>

                <!-- Data Grid with updated styling and optimized virtualization -->
                <DataGrid x:Name="StringsDataGrid" 
                          Style="{StaticResource DataGridStyle}"
                          CellStyle="{StaticResource DataGridCellStyle}"
                          RowStyle="{StaticResource DataGridRowStyle}"
                          ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle}"
                          MouseDoubleClick="StringsDataGrid_MouseDoubleClick"
                          ContextMenuOpening="StringsDataGrid_ContextMenuOpening"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          VirtualizingPanel.IsVirtualizing="True"
                          VirtualizingPanel.VirtualizationMode="Recycling"
                          VirtualizingPanel.CacheLengthUnit="Page"
                          VirtualizingPanel.CacheLength="3"
                          EnableRowVirtualization="True"
                          EnableColumnVirtualization="True"
                          ScrollViewer.IsDeferredScrollingEnabled="True"
                          ScrollViewer.CanContentScroll="True"
                          ClipToBounds="True"
                          RenderOptions.BitmapScalingMode="HighQuality"
                          RenderOptions.ClearTypeHint="Enabled"
                          RenderOptions.EdgeMode="Aliased"
                          Grid.Row="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="String Hash ID" 
                                            Binding="{Binding HashId}" 
                                            Width="120" 
                                            IsReadOnly="False"/>
                        <DataGridTextColumn Header="Entry Function" 
                                            Binding="{Binding FunctionEntry}" 
                                            Width="120"
                                            Visibility="Hidden"
                                            IsReadOnly="True"/>
                        <DataGridTextColumn Header="Text" 
                                            Binding="{Binding Text}" 
                                            Width="*" 
                                            IsReadOnly="True"/>
                    </DataGrid.Columns>

                    <!-- COMPLETELY CUSTOM CONTEXT MENU WITH NO WHITE BACKGROUNDS -->
                    <DataGrid.ContextMenu>
                        <ContextMenu Style="{StaticResource GreenContextMenuStyle}">
                            <MenuItem Header="Edit" Click="EditMenuItem_Click" Style="{StaticResource GreenMenuItemStyle}">
                                <MenuItem.Icon>
                                    <TextBlock Text="&#xE70F;" FontFamily="Segoe MDL2 Assets" Foreground="#00FF50"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Delete" Click="DeleteMenuItem_Click" Style="{StaticResource GreenMenuItemStyle}">
                                <MenuItem.Icon>
                                    <TextBlock Text="&#xE74D;" FontFamily="Segoe MDL2 Assets" Foreground="#00FF50"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator Style="{StaticResource GreenMenuSeparatorStyle}"/>
                            <MenuItem Header="Copy Hash ID" Click="CopyHashMenuItem_Click" Name="CopyHashMenuItem" Style="{StaticResource GreenMenuItemStyle}">
                                <MenuItem.Icon>
                                    <TextBlock Text="&#xE8C8;" FontFamily="Segoe MDL2 Assets" Foreground="#00FF50" Name="CopyHashIcon"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Copy Hex" Click="CopyHexMenuItem_Click" Style="{StaticResource GreenMenuItemStyle}">
                                <MenuItem.Icon>
                                    <TextBlock Text="&#xE8C8;" FontFamily="Segoe MDL2 Assets" Foreground="#00FF50"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Copy Reverse Hex" Click="CopyReverseHexMenuItem_Click" Style="{StaticResource GreenMenuItemStyle}">
                                <MenuItem.Icon>
                                    <TextBlock Text="&#xE8C8;" FontFamily="Segoe MDL2 Assets" Foreground="#00FF50"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator Style="{StaticResource GreenMenuSeparatorStyle}"/>
                            <MenuItem Header="Add to Sharelist" Click="AddToSharelist_Click" Style="{StaticResource GreenMenuItemStyle}">
                                <MenuItem.Icon>
                                    <TextBlock Text="&#xE8F1;" FontFamily="Segoe MDL2 Assets" Foreground="#00FF50"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>

                <!-- Animated Status Bar -->
                <Grid Grid.Row="3">
                    <!-- Extended DataGrid Background (continuous look) -->
                    <Border Background="#1E1E1E" />

                    <!-- Animated Status Bar -->
                    <StatusBar x:Name="AnimatedStatusBar" Background="#2D2D30" BorderBrush="#00FF50" BorderThickness="0,1,0,0" Height="40">
                        <StatusBarItem HorizontalAlignment="Stretch">
                            <Grid Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=StatusBarItem}}">
                                <TextBlock x:Name="StatusText" Text="Ready" Margin="10,0" Foreground="White" HorizontalAlignment="Left"/>

                            </Grid>
                        </StatusBarItem>
                    </StatusBar>
                </Grid>
            </Grid>

            <!-- UPDATED: Sharelist Panel with circular buttons and increased width -->
            <Border x:Name="SharelistPanel" 
                    Grid.Column="2" 
                    Width="400"
                    Background="#252526"
                    BorderThickness="1,0,0,0"
                    BorderBrush="#3F3F46"
                    Visibility="Collapsed">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <!-- Header -->
                        <RowDefinition Height="Auto"/>
                        <!-- Toolbar -->
                        <RowDefinition Height="*"/>
                        <!-- List -->
                        <RowDefinition Height="Auto"/>
                        <!-- Footer -->
                    </Grid.RowDefinitions>

                    <!-- Header -->
                    <Border Grid.Row="0" 
                            Background="#2D2D30" 
                            BorderThickness="0,0,0,1" 
                            BorderBrush="#3F3F46">
                        <Grid Margin="15,12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel x:Name="SharelistTitlePanel" Grid.Column="0" Orientation="Horizontal">
                                <TextBlock Text="Sharelist" 
                                           Foreground="#00FF50" 
                                           FontSize="16" 
                                           FontWeight="SemiBold"
                                           VerticalAlignment="Center"/>
                                <Border Background="#00FF50" 
                                        CornerRadius="10" 
                                        Margin="10,0,0,0"
                                        Padding="8,2"
                                        VerticalAlignment="Center">
                                    <TextBlock x:Name="SharelistCountText" 
                                               Text="0" 
                                               Foreground="#1E1E1E" 
                                               FontWeight="Bold"
                                               FontSize="12"/>
                                </Border>

                                <!-- New entries badge will be added here dynamically -->
                            </StackPanel>

                            <!-- Close button -->
                            <Button Grid.Column="1" 
                                    Click="CloseSharelist_Click"
                                    Style="{StaticResource ActionButtonStyle}"
                                    Width="24" Height="24"
                                    Padding="0">
                                <TextBlock Text="✕" FontSize="16"/>
                            </Button>
                        </Grid>
                    </Border>

                    <!-- Toolbar with circular buttons -->
                    <Border Grid.Row="1" 
                            Background="#333337">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Export Button -->
                            <StackPanel Grid.Column="0" HorizontalAlignment="Center">
                                <Button Style="{StaticResource CircularSharelistButtonStyle}" 
                                        Click="ExportSharelist_Click"
                                        ToolTip="Export Sharelist">
                                    <TextBlock Text="&#xE8DE;" 
                                              FontFamily="Segoe MDL2 Assets" 
                                              FontSize="20"/>
                                </Button>
                                <TextBlock Text="Export" 
                                          Foreground="#CCCCCC" 
                                          FontSize="10" 
                                          HorizontalAlignment="Center"
                                          Margin="0,0,0,5"/>
                            </StackPanel>

                            <!-- Import Button -->
                            <StackPanel Grid.Column="1" HorizontalAlignment="Center">
                                <Button Style="{StaticResource CircularSharelistButtonStyle}" 
                                        Click="ImportSharelist_Click"
                                        ToolTip="Import Sharelist">
                                    <TextBlock Text="&#xE8DB;" 
                                              FontFamily="Segoe MDL2 Assets" 
                                              FontSize="20"/>
                                </Button>
                                <TextBlock Text="Import" 
                                          Foreground="#CCCCCC" 
                                          FontSize="10" 
                                          HorizontalAlignment="Center"
                                          Margin="0,0,0,5"/>
                            </StackPanel>

                            <!-- Clear Button -->
                            <StackPanel Grid.Column="2" HorizontalAlignment="Center">
                                <Button Style="{StaticResource CircularSharelistButtonStyle}" 
                                        Click="ClearSharelist_Click"
                                        ToolTip="Clear All">
                                    <TextBlock Text="&#xE74D;" 
                                              FontFamily="Segoe MDL2 Assets" 
                                              FontSize="20"/>
                                </Button>
                                <TextBlock Text="Clear" 
                                          Foreground="#CCCCCC" 
                                          FontSize="10" 
                                          HorizontalAlignment="Center"
                                          Margin="0,0,0,5"/>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <!-- Sharelist Items with visual indication of new entries -->
                    <ScrollViewer Grid.Row="2" 
                                  VerticalScrollBarVisibility="Auto"
                                  Style="{StaticResource GreenScrollViewer}"
                                  Background="#1E1E1E">
                        <ItemsControl x:Name="SharelistItemsControl"
                                      Margin="5">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="#2D2D30" 
                                            CornerRadius="4" 
                                            Margin="0,2"
                                            Padding="10,8"
                                            BorderThickness="{Binding IsNewAddition, Converter={StaticResource BoolToThicknessConverter}}"
                                            BorderBrush="#00FF50">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Grid.Column="0">
                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,3">
                                                    <TextBlock Text="ID: " 
                                                               Foreground="#999999" 
                                                               FontSize="11"/>
                                                    <TextBlock Text="{Binding HashId}" 
                                                               Foreground="#00FF50" 
                                                               FontWeight="SemiBold"
                                                               FontSize="11"/>
                                                    <TextBlock Text=" | Hex: " 
                                                               Foreground="#999999" 
                                                               FontSize="11"
                                                               Margin="8,0,0,0"/>
                                                    <TextBlock Text="{Binding HexValue}" 
                                                               Foreground="#00FF50" 
                                                               FontFamily="Consolas"
                                                               FontSize="11"/>

                                                    <!-- Show NEW badge if it's a new addition -->
                                                    <Border Visibility="{Binding IsNewAddition, Converter={StaticResource BoolToVisibilityConverter}}" 
                                                            Background="#FF5050" 
                                                            CornerRadius="2" 
                                                            Margin="8,0,0,0" 
                                                            Padding="4,0">
                                                        <TextBlock Text="NEW" 
                                                                   Foreground="White" 
                                                                   FontSize="9" 
                                                                   FontWeight="Bold"/>
                                                    </Border>
                                                </StackPanel>

                                                <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" 
                                                         Background="Transparent"
                                                         Foreground="White" 
                                                         BorderThickness="0"
                                                         TextWrapping="Wrap"
                                                         FontSize="12"
                                                         Padding="0"/>
                                            </StackPanel>

                                            <Button Grid.Column="1" 
                                                    Click="RemoveFromSharelist_Click"
                                                    Tag="{Binding}"
                                                    Style="{StaticResource ActionButtonStyle}"
                                                    Width="20" Height="20"
                                                    Padding="0"
                                                    Margin="5,0,0,0"
                                                    ToolTip="Remove from sharelist">
                                                <TextBlock Text="✕" FontSize="12"/>
                                            </Button>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>

                    <!-- Footer info with update info -->
                    <StackPanel Grid.Row="3" Margin="10,5">
                        <TextBlock Text="Right-click strings to add to sharelist" 
                                   Foreground="#999999" 
                                   FontSize="11"
                                   HorizontalAlignment="Center"/>

                        <!-- Display version information if available -->
                        <StackPanel x:Name="VersionInfoPanel" 
                                   Orientation="Horizontal" 
                                   HorizontalAlignment="Center" 
                                   Margin="0,5,0,0" 
                                   Visibility="Collapsed">
                            <TextBlock Text="Version: " 
                                      Foreground="#999999" 
                                      FontSize="11"/>
                            <TextBlock x:Name="VersionText" 
                                      Text="1.0" 
                                      Foreground="#00FF50" 
                                      FontSize="11" 
                                      FontWeight="SemiBold"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

        <!-- CSV Drag and Drop Overlay (now inside the main Grid, not a direct child of Window) -->
        <Grid x:Name="DragDropOverlay" 
              Panel.ZIndex="1000" 
              Background="#80000000" 
              Visibility="Collapsed">
            <Border Background="#2D2D30" 
                    Width="400" 
                    Height="300" 
                    CornerRadius="8" 
                    Effect="{StaticResource DropShadowEffect}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock x:Name="DragDropTitleTextBlock"
                               Grid.Row="0" 
                               Text="CSV Import Options" 
                               FontSize="18" 
                               Foreground="White" 
                               Margin="20,20,20,10" 
                               HorizontalAlignment="Center"/>

                    <TextBlock x:Name="DragDropDescriptionTextBlock"
                               Grid.Row="1" 
                               Text="Drop the file to import strings" 
                               Foreground="#00FF50" 
                               Margin="20,0,20,10" 
                               HorizontalAlignment="Center"/>

                    <!-- This panel can be shown/hidden based on file type -->
                    <StackPanel x:Name="ImportOptionsPanel" Grid.Row="2" Margin="20,10" Visibility="Collapsed">
                        <CheckBox x:Name="LimitRangeCheckbox" 
                                  Content="Limit Import Range" 
                                  Foreground="White" 
                                  Margin="0,5" 
                                  Checked="LimitRangeCheckbox_CheckedChanged" 
                                  Unchecked="LimitRangeCheckbox_CheckedChanged"/>
                    </StackPanel>

                    <Grid Grid.Row="3" x:Name="RangeSelectionGrid" Visibility="Collapsed" Margin="20,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Add file name display -->
                        <TextBlock x:Name="FileNameTextBlock" 
                                   Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                                   Text="File: (none)" 
                                   Foreground="#00FF50" 
                                   Margin="0,0,0,10" 
                                   FontWeight="SemiBold"/>

                        <TextBlock Grid.Row="1" Grid.Column="0" 
                                   Text="Column to Import:" 
                                   Foreground="White" 
                                   Margin="0,5,10,5" 
                                   VerticalAlignment="Center"/>

                        <ComboBox x:Name="ColumnSelectionComboBox" 
                                  Grid.Row="1" Grid.Column="1" 
                                  Margin="0,5" 
                                  SelectedIndex="0">
                            <ComboBoxItem Content="Auto-detect"/>
                            <ComboBoxItem Content="First Column"/>
                            <ComboBoxItem Content="Second Column"/>
                            <ComboBoxItem Content="Third Column"/>
                            <ComboBoxItem Content="Fourth Column"/>
                        </ComboBox>

                        <TextBlock Grid.Row="2" Grid.Column="0" 
                                   Text="Start Row:" 
                                   Foreground="White" 
                                   Margin="0,5,10,5" 
                                   VerticalAlignment="Center"/>

                        <TextBox x:Name="StartRowTextBox" 
                                 Grid.Row="2" Grid.Column="1" 
                                 Text="1" 
                                 Margin="0,5"/>

                        <TextBlock Grid.Row="3" Grid.Column="0" 
                                   Text="End Row:" 
                                   Foreground="White" 
                                   Margin="0,5,10,5" 
                                   VerticalAlignment="Center"/>

                        <TextBox x:Name="EndRowTextBox" 
                                 Grid.Row="3" Grid.Column="1" 
                                 Text="All" 
                                 Margin="0,5"/>

                        <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" 
                                   Text="Note: First row (0) is usually header" 
                                   Foreground="#AAAAAA" 
                                   FontStyle="Italic" 
                                   Margin="0,5"/>
                    </Grid>

                    <StackPanel Grid.Row="4" 
                                Orientation="Horizontal" 
                                HorizontalAlignment="Center" 
                                Margin="20,10,20,20">
                        <Button x:Name="CancelImportButton" 
                                Content="Cancel" 
                                Style="{StaticResource ActionButtonStyle}" 
                                Width="100" 
                                Margin="0,0,10,0"
                                Click="CancelImportButton_Click"/>
                        <Button x:Name="ImportButton" 
                                Content="Import" 
                                Style="{StaticResource ActionButtonStyle}" 
                                Width="100"
                                Click="ImportButton_Click"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>